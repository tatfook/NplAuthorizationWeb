<?npl
--[[
Title: auth.page
Author: leio
Date: 2017/11/24
Desc: 

http://localhost:8099/models/auth/helloworld?a=1
]]
local client_secret = "daofengkeji";

local auth = inherit(models.abstract.base, gettable("models.auth"));

function auth:api_helloworld(params)
	return {params}
end

-- keepwork callback
function auth:api_callback(params)
    local code = params.code;
    local client_id = params.clientId;
    local url = "http://keepwork.com/api/wiki/models/oauth_app/getTokenByCode";

    local input = {
        code = code,
        client_id = client_id,
        client_secret = client_secret,
    };
    System.os.GetUrl({url = url, qs = input }, resume);
    local error, msg = yield();
    LOG.std(nil, "debug", "keepwork login state", error);
	LOG.std(nil, "debug", "keepwork login msg", msg);
    local token;
    local info;
    if(msg and msg.data and msg.data.token)then
        token = msg.data.token;

        local url = "http://keepwork.com/api/wiki/models/user/getProfile";
        local input = {
            url = url,
            json = true,
            headers = {
                ["Authorization"] = " Bearer " .. token,
            }
        };
        System.os.GetUrl(input, resume);
        local error, msg = yield();
        LOG.std(nil, "debug", "keepwork getProfile state", error);
	    LOG.std(nil, "debug", "keepwork getProfile msg", msg);
        if(msg and msg.data and msg.data.data)then
            info = msg.data.data;
        end
	    LOG.std(nil, "debug", "keepwork getProfile info", info);
    end
    return { token = token, error = error, info = info, }
end
